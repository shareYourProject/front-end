{"remainingRequest":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/runner/work/front-end/front-end/src/views/HomeView.vue?vue&type=template&id=e6cc3532&ts=true","dependencies":[{"path":"/home/runner/work/front-end/front-end/src/views/HomeView.vue","mtime":1638848160323},{"path":"/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgogICAgPGRpdiBjbGFzcz0idy1mdWxsIG1kOnctMi8zIGxnOnctMi8zIHhsOnctMi81IG14LWF1dG8iPgogICAgICAgIDxkaXYKICAgICAgICB2LWlmPSJpc0F1dGhlbnRpY2F0ZWQiCiAgICAgICAgY2xhc3M9InRleHQtMnhsIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTgwMCBtdC01IHBsLTUgbWQ6cGwtMCI+CiAgICAgICAgICAgIEJvbmpvdXIge3t1c2VyLmZpcnN0X25hbWV9fSB7e3VzZXIubGFzdF9uYW1lfX0gIQogICAgICAgIDwvZGl2PgoKICAgICAgICA8UG9zdENyZWF0b3Igdi1pZj0iaXNBdXRoZW50aWNhdGVkIiA6ZXh0cmFDb250ZW50PSJ0cnVlIiBjbGFzcz0ibXQtNiI+PC9Qb3N0Q3JlYXRvcj4KCiAgICAgICAgPFBvc3RDYXJkIGNsYXNzPSJteS02IHNoYWRvdy1tZCIgdi1mb3I9InBvc3QgaW4gcG9zdHMiIDprZXk9Iidwb3N0XycgKyBwb3N0LmlkIiA6cG9zdD0icG9zdCI+PC9Qb3N0Q2FyZD4KCiAgICAgICAgPGRpdiBjbGFzcz0idy1mdWxsIGZsZXgganVzdGlmeS1jZW50ZXIiPgogICAgICAgICAgPGRpdiByZWY9ImxvYWRlciI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCg=="},{"version":3,"sources":["/home/runner/work/front-end/front-end/src/views/HomeView.vue"],"names":[],"mappings":";;IAEI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrnD,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEvG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/runner/work/front-end/front-end/src/views/HomeView.vue","sourceRoot":"","sourcesContent":["<template>\n\n    <div class=\"w-full md:w-2/3 lg:w-2/3 xl:w-2/5 mx-auto\">\n        <div\n        v-if=\"isAuthenticated\"\n        class=\"text-2xl font-semibold text-gray-800 mt-5 pl-5 md:pl-0\">\n            Bonjour {{user.first_name}} {{user.last_name}} !\n        </div>\n\n        <PostCreator v-if=\"isAuthenticated\" :extraContent=\"true\" class=\"mt-6\"></PostCreator>\n\n        <PostCard class=\"my-6 shadow-md\" v-for=\"post in posts\" :key=\"'post_' + post.id\" :post=\"post\"></PostCard>\n\n        <div class=\"w-full flex justify-center\">\n          <div ref=\"loader\"></div>\n        </div>\n    </div>\n\n</template>\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\nimport {mapActions, mapGetters} from 'vuex'\nimport PostCard from '@/components/cards/PostCard.vue'\nimport PostCreator from \"@/components/cards/PostCreator.vue\";\nimport lottie, {AnimationItem} from 'lottie-web';\n\nexport default defineComponent({\n    components: {\n        PostCard,\n        PostCreator\n    },\n    computed: {\n        ...mapGetters({\n            isAuthenticated: 'isAuthenticated',\n            user: 'user',\n            posts: 'feedPosts',\n            currentFeedPage: 'currentFeedPage',\n            lastFeedPage: 'lastFeedPage'\n        })\n    },\n    data() {\n      return {\n        animation: undefined as unknown as AnimationItem\n      }\n    },\n    methods: {\n        ...mapActions({\n            getNewPosts: 'getNewPosts'\n        }),\n        scroll() {\n          window.onscroll = () => {\n            let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\n\n            if (bottomOfWindow && this.currentFeedPage < this.lastFeedPage) {\n              this.animation.play()\n              this.getNewPosts();\n              setTimeout(() => this.animation.stop(), 1000);\n            }\n          }\n        }\n    },\n    mounted() {\n        this.getNewPosts();\n        this.animation = lottie.loadAnimation({\n          container: this.$refs['loader'] as Element,\n          renderer: 'svg',\n          loop: true,\n          autoplay: false,\n          path: '/lottie/loading.json'\n        });\n        this.scroll();\n    }\n})\n</script>\n\n"]}]}