{"remainingRequest":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/runner/work/front-end/front-end/src/components/inputs/BadgeSelectInput.vue?vue&type=template&id=a5c1e2ee&ts=true","dependencies":[{"path":"/home/runner/work/front-end/front-end/src/components/inputs/BadgeSelectInput.vue","mtime":1638848160319},{"path":"/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJ3LWZ1bGwgcmVsYXRpdmUiIHYtY2xpY2stb3V0c2lkZT0ib25DbGlja091dHNpZGUiPgoKICAgICAgICA8IS0tIExhYmVsIC0tPgogICAgICAgIDxJbnB1dExhYmVsIDpsYWJlbD0ibGFiZWwiICA6bmFtZT0ibmFtZSIgLz4KCiAgICAgICAgPCEtLSBJbnB1dCAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4IGl0ZW1zLWNlbnRlciByZWxhdGl2ZSI+CiAgICAgICAgICAgIDxpbnB1dCA6Y2xhc3M9InsnYm9yZGVyLXJlZC01MDAnOiBlcnJvciwgJ3JvdW5kZWQtYi1sZyc6IHNlbGVjdGVkQmFkZ2VzLmxlbmd0aCA9PSAwfSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYXBwZWFyYW5jZS1ub25lIGJsb2NrIHctZnVsbCBiZy1ncmF5LTIwMCB0ZXh0LWdyYXktNzAwIGZvY3VzOmJvcmRlci12aXJpZGlhbnQtNjAwIGJvcmRlci0yIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLXQtbGcgcHktMyBweC00IGxlYWRpbmctdGlnaHQgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOmJnLXdoaXRlIgogICAgICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlcj0icGxhY2Vob2xkZXIiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VhcmNoUXVlcnkiCiAgICAgICAgICAgICAgICAgICAgOmlkPSJuYW1lIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZm9jdXMgPSB0cnVlIgogICAgICAgICAgICAgICAgICAgIEBpbnB1dD0idXBkYXRlQmFkZ2VMaXN0IgogICAgICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZT0ib2ZmIj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBTZWFyY2hlZCBiYWRnZXMgLS0+CiAgICAgICAgPGRpdiB2LWlmPSJmb2N1cyAmJiBiYWRnZXMubGVuZ3RoID4gMCIgY2xhc3M9ImFic29sdXRlIHctZnVsbCBiZy13aGl0ZSByb3VuZGVkIHotMTAgc2hhZG93LW1kIHB4LTMgcHktMiBmbGV4IGZsZXgtd3JhcCI+CiAgICAgICAgICAgIDxiYWRnZS1sYWJlbCBjbGFzcz0iYmxvY2sgIgogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iYmFkZ2UgaW4gYmFkZ2VzIgogICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZEJhZGdlKGJhZGdlKSIKICAgICAgICAgICAgICAgICAgICAgICAgOmNsb3NlPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iYmFkZ2UuaWQiCiAgICAgICAgICAgICAgICAgICAgICAgIDpsYWJlbD0iYmFkZ2UubGFiZWwiPjwvYmFkZ2UtbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDwhLS0gU2VsZWN0ZWQgYmFkZ2VzIC0tPgogICAgICAgIDxkaXYgdi1pZj0ic2VsZWN0ZWRCYWRnZXMubGVuZ3RoID4gMCIgY2xhc3M9InctZnVsbCBib3JkZXIgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtYi1tZCBmbGV4IGZsZXgtd3JhcCBwLTIgYmctY3VsdHVyZWQtMzAwIj4KICAgICAgICAgICAgPHNwYW4gdi1mb3I9ImJhZGdlIGluIHNlbGVjdGVkQmFkZ2VzIiA6a2V5PSJiYWRnZS5pZCsnX3NlbGVjdGVkJyIgY2xhc3M9InJvdW5kZWQtZnVsbCBweC0yIHBiLTEgcHQtMC4yNSB0ZXh0LXhzIGZsZXggaXRlbXMtY2VudGVyIGZvbnQtc2VtaWJvbGQgYmctb255eC0yMDAgbG93ZXJjYXNlIG1yLTIiPnt7YmFkZ2UubGFiZWx9fQogICAgICAgICAgICAgICAgPHN2ZyBAY2xpY2s9InJlbW92ZUJhZGdlKGJhZGdlKSIgY2xhc3M9ImZlYXRoZXIgZmVhdGhlci14IGgtNCB3LTQgY3Vyc29yLXBvaW50ZXIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+PGxpbmUgeDE9IjE4IiB5MT0iNiIgeDI9IjYiIHkyPSIxOCI+PC9saW5lPjxsaW5lIHgxPSI2IiB5MT0iNiIgeDI9IjE4IiB5Mj0iMTgiPjwvbGluZT48L3N2Zz4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIEluZGljYXRpb25zIC0tPgogICAgICAgIDxwIHYtaWY9ImVycm9yIiBjbGFzcz0idGV4dC1yZWQtNTAwIHRleHQteHMgaXRhbGljIj57eyBlcnJvciB9fTwvcD4KICAgICAgICA8cCB2LWlmPSJpbmRpY2F0aW9uIiBjbGFzcz0idGV4dC1ncmF5LTYwMCB0ZXh0LXhzIGl0YWxpYyI+e3sgaW5kaWNhdGlvbiB9fTwvcD4KCgogICAgICAgIDxzZWxlY3QgOm5hbWU9Im5hbWUiIDppZD0ibmFtZSsnX2lkJyIgY2xhc3M9ImhpZGRlbiIgbXVsdGlwbGU+CiAgICAgICAgICAgIDxvcHRpb24gdi1mb3I9ImJhZGdlIGluIHNlbGVjdGVkQmFkZ2VzIiA6a2V5PSJiYWRnZS5pZCsnX3NlbGVjdCciIHNlbGVjdGVkIDp2YWx1ZT0iYmFkZ2UuaWQiPjwvb3B0aW9uPgogICAgICAgIDwvc2VsZWN0PgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/runner/work/front-end/front-end/src/components/inputs/BadgeSelectInput.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEzD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;QAE1C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACvnH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACvvgBACtjW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/runner/work/front-end/front-end/src/components/inputs/BadgeSelectInput.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"w-full relative\" v-click-outside=\"onClickOutside\">\n\n        <!-- Label -->\n        <InputLabel :label=\"label\"  :name=\"name\" />\n\n        <!-- Input -->\n        <div class=\"flex items-center relative\">\n            <input :class=\"{'border-red-500': error, 'rounded-b-lg': selectedBadges.length == 0}\"\n                    class=\"appearance-none block w-full bg-gray-200 text-gray-700 focus:border-viridiant-600 border-2 border-gray-200 rounded-t-lg py-3 px-4 leading-tight focus:outline-none focus:bg-white\"\n                    :placeholder=\"placeholder\"\n                    v-model=\"searchQuery\"\n                    :id=\"name\"\n                    @click=\"focus = true\"\n                    @input=\"updateBadgeList\"\n                    autocomplete=\"off\">\n        </div>\n\n        <!-- Searched badges -->\n        <div v-if=\"focus && badges.length > 0\" class=\"absolute w-full bg-white rounded z-10 shadow-md px-3 py-2 flex flex-wrap\">\n            <badge-label class=\"block \"\n                        v-for=\"badge in badges\"\n                        @click=\"addBadge(badge)\"\n                        :close=\"false\"\n                        :key=\"badge.id\"\n                        :label=\"badge.label\"></badge-label>\n        </div>\n\n        <!-- Selected badges -->\n        <div v-if=\"selectedBadges.length > 0\" class=\"w-full border border-gray-200 rounded-b-md flex flex-wrap p-2 bg-cultured-300\">\n            <span v-for=\"badge in selectedBadges\" :key=\"badge.id+'_selected'\" class=\"rounded-full px-2 pb-1 pt-0.25 text-xs flex items-center font-semibold bg-onyx-200 lowercase mr-2\">{{badge.label}}\n                <svg @click=\"removeBadge(badge)\" class=\"feather feather-x h-4 w-4 cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n            </span>\n        </div>\n\n        <!-- Indications -->\n        <p v-if=\"error\" class=\"text-red-500 text-xs italic\">{{ error }}</p>\n        <p v-if=\"indication\" class=\"text-gray-600 text-xs italic\">{{ indication }}</p>\n\n\n        <select :name=\"name\" :id=\"name+'_id'\" class=\"hidden\" multiple>\n            <option v-for=\"badge in selectedBadges\" :key=\"badge.id+'_select'\" selected :value=\"badge.id\"></option>\n        </select>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport InputLabel from './InputLabel.vue';\nimport BadgeLabel from '../utils/BadgeLabel.vue';\nimport vClickOutside from '../../click-outside';\nimport {API} from '../../api';\nimport { Badge } from '../../models';\n\nexport default defineComponent({\n    components: {\n        InputLabel,\n        BadgeLabel\n    },\n    directives: {\n        clickOutside: vClickOutside\n    },\n    data() {\n        return {\n            badges: new Array<Badge>(),\n            selectedBadges: new Array<Badge>(),\n            searchQuery: \"\",\n            focus: false\n        }\n    },\n    props: {\n        label: {\n            type: String,\n            default: \"\"\n        },\n        name: {\n            type: String,\n            default: \"\"\n        },\n        placeholder: {\n            type: String,\n            default: \"\"\n        },\n        error: {\n            type: String,\n            default: \"\"\n        },\n        indication: {\n            type: String,\n            default: \"\"\n        },\n        modelValue: {\n            type: Object as PropType<Array<Badge>>,\n            required: true\n        }\n    },\n    methods: {\n        reset() {\n            this.searchQuery = \"\";\n            this.badges = [];\n            this.focus = false;\n        },\n        updateBadgeList : function () {\n            if (this.searchQuery === \"\") { this.badges = []; return; }\n\n            API.Badge.search(this.searchQuery).then(response => {\n                this.badges = response.data;\n            });\n        },\n        addBadge : function (badge: Badge) {\n            if (this.selectedBadges.map(badge => badge.id).includes(badge.id)) return;\n\n            this.selectedBadges.push(badge);\n            this.reset()\n            this.$emit('update:modelValue', this.selectedBadges);\n        },\n        removeBadge : function (badge: Badge) {\n            let index = this.selectedBadges.map(badge => badge.id).indexOf(badge.id);\n            if (index > -1) {\n                this.selectedBadges.splice(index, 1);\n                this.$emit('update:modelValue', this.selectedBadges);\n            }\n        },\n        onClickOutside : function () {\n            this.focus = false;\n        }\n    },\n})\n</script>\n"]}]}