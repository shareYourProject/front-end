{"remainingRequest":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js!/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js!/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js??ref--15-3!/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/store/modules/auth.ts","dependencies":[{"path":"/home/runner/work/front-end/front-end/src/store/modules/auth.ts","mtime":1638848160323},{"path":"/home/runner/work/front-end/front-end/babel.config.js","mtime":1638848160311},{"path":"/home/runner/work/front-end/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQVBJIH0gZnJvbSAnLi4vLi4vYXBpJzsgLy8gaW5pdGlhbCBzdGF0ZQoKdmFyIHN0YXRlID0gewogIGF1dGhVc2VyOiB1bmRlZmluZWQKfTsgLy8gZ2V0dGVycwoKdmFyIGdldHRlcnMgPSB7CiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiAhIXN0YXRlLmF1dGhVc2VyOwogIH0sCiAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmF1dGhVc2VyOwogIH0KfTsgLy8gYWN0aW9ucwoKdmFyIGFjdGlvbnMgPSB7CiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgbWU6IGZ1bmN0aW9uIG1lKF9yZWYpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHJldHVybiBBUEkuVXNlci51c2VyKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgc3dpdGNoIChyZXNwb25zZS5zdGF0dXMpIHsKICAgICAgICBjYXNlIDIwMDoKICAgICAgICAgIGNvbW1pdCgnU0VUX1VTRVInLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgY29tbWl0KCdTRVRfVVNFUicsIG51bGwpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0pOwogIH0KfTsgLy8gbXV0YXRpb25zCgp2YXIgbXV0YXRpb25zID0gewogIFNFVF9VU0VSOiBmdW5jdGlvbiBTRVRfVVNFUihzdGF0ZSwgdXNlcikgewogICAgc3RhdGUuYXV0aFVzZXIgPSB1c2VyOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/store/modules/auth.ts"],"names":[],"mappings":"AAAA,SAAQ,GAAR,QAAkB,WAAlB,C,CAIA;;AACA,IAAM,KAAK,GAAe;AACtB,EAAA,QAAQ,EAAE;AADY,CAA1B,C,CAMA;;AACA,IAAM,OAAO,GAAG;AACZ,EAAA,eADY,2BACI,KADJ,EACgB;AACxB,WAAO,CAAC,CAAC,KAAK,CAAC,QAAf;AACH,GAHW;AAIZ,EAAA,IAJY,gBAIP,KAJO,EAIK;AACb,WAAO,KAAK,CAAC,QAAb;AACH;AANW,CAAhB,C,CASA;;AACA,IAAM,OAAO,GAAG;AACZ;AACA,EAAA,EAFY,oBAEO;AAAA,QAAb,MAAa,QAAb,MAAa;AACjB,WAAO,GAAG,CAAC,IAAJ,CAAS,IAAT,GAAgB,IAAhB,CAAqB,UAAC,QAAD,EAAa;AACvC,cAAQ,QAAQ,CAAC,MAAjB;AACE,aAAK,GAAL;AACE,UAAA,MAAM,CAAC,UAAD,EAAa,QAAQ,CAAC,IAAtB,CAAN;AACA;;AAEF;AACE,UAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;AACA;AAPJ;AASD,KAVM,CAAP;AAWD;AAdW,CAAhB,C,CAiBA;;AACA,IAAM,SAAS,GAAG;AAEd,EAAA,QAFc,oBAEJ,KAFI,EAEU,IAFV,EAEoB;AAC9B,IAAA,KAAK,CAAC,QAAN,GAAiB,IAAjB;AACH;AAJa,CAAlB;AAOA,eAAe;AACb,EAAA,KAAK,EAAL,KADa;AAEb,EAAA,OAAO,EAAP,OAFa;AAGb,EAAA,OAAO,EAAP,OAHa;AAIb,EAAA,SAAS,EAAT;AAJa,CAAf","sourcesContent":["import {API} from '../../api'\nimport {User} from '../../models'\nimport {AuthState} from './types'\n\n// initial state\nconst state : AuthState = {\n    authUser: undefined\n}\n\ntype State = typeof state\n\n// getters\nconst getters = {\n    isAuthenticated(state: State): boolean{\n        return !!state.authUser;\n    },\n    user(state: State): User | undefined {\n        return state.authUser;\n    }\n}\n\n// actions\nconst actions = {\n    // eslint-disable-next-line\n    me ({ commit }: any): Promise<void> {\n      return API.User.user().then((response) => {\n        switch (response.status) {\n          case 200:\n            commit('SET_USER', response.data);\n            break;\n        \n          default:\n            commit('SET_USER', null);\n            break;\n        }\n      })\n    }\n}\n\n// mutations\nconst mutations = {\n\n    SET_USER (state: State, user: User): void {\n        state.authUser = user;\n    }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"],"sourceRoot":""}]}