{"remainingRequest":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js!/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js!/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js??ref--15-3!/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/api.ts","dependencies":[{"path":"/home/runner/work/front-end/front-end/src/api.ts","mtime":1638848160311},{"path":"/home/runner/work/front-end/front-end/babel.config.js","mtime":1638848160311},{"path":"/home/runner/work/front-end/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/api.ts"],"names":[],"mappings":"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","sourcesContent":["import {Badge, Comment, Notification, PaginateResponse, Post, Project, User} from './models';\nimport axios, {AxiosPromise, AxiosRequestConfig, AxiosResponse} from 'axios'\n\nconst API_URL: string = process.env.VUE_APP_API_PATH as string;\nconst API_AUTH_URL: string = process.env.VUE_APP_AUTH_PATH as string;\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.withCredentials = true;\n\n/**\n *\n * @param method\n * @param path\n * @param data\n * @param headers\n */\nconst fetchResource = <T = any>(method: string, path: string, data = {}, headers = {}) : Promise<AxiosResponse<T>> => {\n\n    // Variable which will be used for storing response\n\n    return (axios({\n        method: method,\n        url: path,\n        data: data,\n        headers: headers\n    } as AxiosRequestConfig) as AxiosPromise<T>).then(response => {\n\n        return response;\n\n    }).catch(error => {\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            return error.response;\n        }\n        throw error;\n    })\n}\n\nconst API = {\n    /**\n     * Search posts and users from a query\n     * @param query\n     */\n    search(query: string): Promise<AxiosResponse<User[]>>{\n        const url = `${API_URL}/search/${query}`;\n        return fetchResource<Array<User>>('get', url);\n    },\n    /**\n     * Logout the user\n     */\n    logout(): Promise<AxiosResponse<any>> {\n        const url = `${API_AUTH_URL}/logout`;\n        return fetchResource('post', url);\n    },\n    /**\n     * Get CSRF token\n     */\n    csrf(): Promise<AxiosResponse<any>> {\n        const url = `${API_AUTH_URL}/sanctum/csrf-cookie`;\n        return fetchResource('get', url);\n    },\n    /**\n     * Login the user\n     */\n    login(credentials: Record<string, unknown>): Promise<AxiosResponse<any>> {\n        const url = `${API_AUTH_URL}/login`;\n        return fetchResource('post', url, credentials);\n    },\n    /**\n     * Register a new user\n     */\n    register(credentials: Record<string, unknown>): Promise<AxiosResponse<any>> {\n        const url = `${API_AUTH_URL}/register`;\n        return fetchResource('post', url, credentials);\n    },\n    /**\n     * Notifications API wrapper\n     */\n    Notification: {\n        /**\n         * Base notification requests url\n         */\n        url: `${API_URL}/notifications`,\n        /**\n         * Get user notifications.\n         */\n        get(page = 1): Promise<AxiosResponse<PaginateResponse<Notification>>> {\n            const url = `${this.url}?page=${page}`;\n            return fetchResource<PaginateResponse<Notification>>('get', url);\n        },\n        /**\n         * Set a notification as read.\n         */\n        markAsRead(id: string): Promise<AxiosResponse> {\n            const url = `${this.url}/${id}`;\n            return fetchResource<PaginateResponse>('put', url);\n        }\n    },\n    /**\n     * Post API wrapper\n     */\n    Post: {\n        /**\n         * Base post requests url\n         */\n        url: `${API_URL}/posts`,\n        /**\n         * Get a post\n         */\n        get(id: number): Promise<AxiosResponse<Post>> {\n            const url = `${this.url}/${id}`;\n            return fetchResource<Post>('get', url);\n        },\n        /**\n         * Like a post\n         * @param post\n         */\n        like(post: Post): Promise<AxiosResponse<Post>> {\n            const url = `${this.url}/${post.id}/like`;\n            return fetchResource<Post>('put', url);\n        },\n        /**\n         * Unike a post\n         * @param post\n         */\n        unlike(post: Post): Promise<AxiosResponse<Post>> {\n            const url = `${this.url}/${post.id}/unlike`;\n            return fetchResource<Post>('put', url);\n        },\n        create(files: Array<File>, reshare?: Post, content?: string, project?: Project): Promise<AxiosResponse<Post>> {\n            const url = `${this.url}/create`;\n\n            const formData = new FormData();\n\n            if (files.length > 0) {\n                files.forEach((file, index) => {\n                    formData.append(`image[${index}]`, file);\n                });\n            }\n\n            if (reshare) formData.append('reshare', String(reshare.id));\n            if (project) formData.append('project', String(project.id));\n            if (content) formData.append('content', content);\n\n            return fetchResource<Post>('post', url, formData, {\n                'Content-Type': 'multipart/form-data'\n            });\n        },\n        /**\n         * Get the comments of a post\n         * @param post\n         * @param page\n         */\n        comments(post: Post, page = 1): Promise<AxiosResponse<PaginateResponse<Comment>>> {\n            const url = `${this.url}/${post.id}/comments?page=${page}`;\n            return fetchResource<PaginateResponse<Comment>>('get', url);\n        }\n    },\n    /**\n     * Fedd API wrapper\n     */\n    Feed: {\n        /**\n         * Load user feed and return loaded posts\n         * @param page Page to load\n         */\n        get(page = 1): Promise<AxiosResponse<PaginateResponse<Post>>> {\n            const url = `${API_URL}/feed?page=${ page }`;\n            return fetchResource<PaginateResponse<Post>>('get', url);\n        },\n    },\n    /**\n     * Project API wrapper\n     */\n    Project: {\n        /**\n         *  Base project requests url\n         */\n        url: `${API_URL}/projects`,\n        /**\n         * Search projects\n         */\n        search(query: string): Promise<AxiosResponse<Project[]>> {\n            const url = `${this.url}/search?query=${query}`;\n            return fetchResource<Array<Project>>('get', url);\n        },\n        /**\n         * Get a project\n         */\n        get(projectId: number): Promise<AxiosResponse<Project>> {\n            const url = `${this.url}/${projectId}`;\n            return fetchResource<Project>('get', url);\n        },\n        posts(project: Project, page = 1): Promise<AxiosResponse<PaginateResponse<Post>>> {\n            const url = `${this.url}/${project.id}/posts?page=${page}`;\n            return fetchResource<PaginateResponse<Post>>('get', url);\n        },\n        /**\n         * Follow a project.\n         * @param project\n         */\n        follow(project: Project): Promise<AxiosResponse<Project>> {\n            const url = `${this.url}/${project.id}/follow`;\n            return fetchResource<Project>('put', url);\n        },\n        /**\n         * Unfollow a project.\n         * @param project\n         */\n        unfollow(project: Project): Promise<AxiosResponse<Project>> {\n            const url = `${this.url}/${project.id}/unfollow`;\n            return fetchResource<Project>('put', url);\n        }\n    },\n    User: {\n        /**\n         * Base user requests url\n         */\n        url: `${API_URL}/users`,\n        /**\n         * Search users\n         */\n        search(query: string): Promise<AxiosResponse<User[]>> {\n            const url = `${this.url}/search?query=${query}`;\n            return fetchResource<Array<User>>('get', url);\n        },\n        /**\n         * Get the current authenticated user\n         */\n        user(): Promise<AxiosResponse<User>> {\n            const url = `${API_URL}/user`;\n            return fetchResource<User>('get', url);\n        },\n        /**\n         * Get a user\n         */\n        get(userId: number): Promise<AxiosResponse<User>> {\n            const url = `${this.url}/${userId}`;\n            return fetchResource<User>('get', url);\n        },\n        /**\n         * Update the profile of the user\n         */\n        updateProfile(user: User, data: Record<string, unknown>): Promise<AxiosResponse<User>> {\n            const url = `${this.url}/${user.id}/profile`;\n            return fetchResource<User>('put', url, data);\n        },\n        /**\n         * Follow a user.\n         * @param user\n         */\n        follow(user: User): Promise<AxiosResponse<User>> {\n            const url = `${this.url}/${user.id}/follow`;\n            return fetchResource<User>('put', url);\n        },\n        /**\n         * Unfollow a user.\n         * @param user\n         */\n        unfollow(user: User): Promise<AxiosResponse<User>> {\n            const url = `${this.url}/${user.id}/unfollow`;\n            return fetchResource<User>('put', url);\n        }\n    },\n    Badge: {\n        /**\n         * Base badge requests url\n         */\n        url: `${API_URL}/badges`,\n        search(query: string): Promise<AxiosResponse<Badge[]>> {\n            const url = `${this.url}/search?query=${query}`;\n            return fetchResource<Array<Badge>>('get', url);\n        }\n    },\n    Comment: {\n        /**\n         * Base comment requests url\n         */\n        url: `${API_URL}/comments`,\n        /**\n         * Get a comment\n         * @param id\n         */\n        get(id: number): Promise<AxiosResponse<Comment>> {\n            const url = `${this.url}/${id}`;\n            return fetchResource<Comment>('get', url);\n        },\n        /**\n         * Create a new comment\n         * @param content\n         * @param post\n         */\n        create(content: string, post: Post): Promise<AxiosResponse<Comment>> {\n            return fetchResource<Comment>('post', this.url, {content: content, post_id: post.id});\n        },\n        /**\n         * Update a comment\n         * @param comment\n         * @param content\n         */\n        update(comment: Comment, content: string): Promise<AxiosResponse<Comment>> {\n            const url = `${this.url}/${comment.id}`;\n            return fetchResource<Comment>('put', url, {content: content});\n        },\n        /**\n         * Delete a comment\n         * @param comment\n         */\n        delete(comment: Comment): Promise<AxiosResponse> {\n            const url = `${this.url}/${comment.id}`;\n            return fetchResource<Comment>('delete', url);\n        }\n    }\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport {API, fetchResource, axios};\n"],"sourceRoot":""}]}