{"remainingRequest":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js!/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js!/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js??ref--15-3!/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/store/modules/feed.ts","dependencies":[{"path":"/home/runner/work/front-end/front-end/src/store/modules/feed.ts","mtime":1638848160323},{"path":"/home/runner/work/front-end/front-end/babel.config.js","mtime":1638848160311},{"path":"/home/runner/work/front-end/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/front-end/front-end/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9ydW5uZXIvd29yay9mcm9udC1lbmQvZnJvbnQtZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCB7IEFQSSB9IGZyb20gJ0AvYXBpJzsgLy8gaW5pdGlhbCBzdGF0ZQoKdmFyIHN0YXRlID0gewogIGN1cnJlbnRQYWdlOiAwLAogIGxhc3RQYWdlOiAxLAogIHBvc3RzOiBbXQp9OyAvLyBnZXR0ZXJzCgp2YXIgZ2V0dGVycyA9IHsKICBmZWVkUG9zdHM6IGZ1bmN0aW9uIGZlZWRQb3N0cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBvc3RzOwogIH0sCiAgY3VycmVudEZlZWRQYWdlOiBmdW5jdGlvbiBjdXJyZW50RmVlZFBhZ2Uoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jdXJyZW50UGFnZTsKICB9LAogIGxhc3RGZWVkUGFnZTogZnVuY3Rpb24gbGFzdEZlZWRQYWdlKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubGFzdFBhZ2U7CiAgfQp9OyAvLyBhY3Rpb25zCgp2YXIgYWN0aW9ucyA9IHsKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlcwogIGdldE5ld1Bvc3RzOiBmdW5jdGlvbiBnZXROZXdQb3N0cyhfcmVmKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQsCiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlOwogICAgaWYgKHN0YXRlLmN1cnJlbnRQYWdlID09IHN0YXRlLmxhc3RQYWdlKSByZXR1cm47CiAgICBBUEkuRmVlZC5nZXQoc3RhdGUuY3VycmVudFBhZ2UgKyAxKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBzd2l0Y2ggKHJlc3BvbnNlLnN0YXR1cykgewogICAgICAgIGNhc2UgMjAwOgogICAgICAgICAgY29tbWl0KCdBRERfUE9TVFMnLCByZXNwb25zZS5kYXRhLmRhdGEpOwogICAgICAgICAgY29tbWl0KCdTRVRfTEFTVF9QQUdFJywgcmVzcG9uc2UuZGF0YS5tZXRhLmxhc3RfcGFnZSk7CiAgICAgICAgICBjb21taXQoJ1NFVF9DVVJSRU5UX1BBR0UnLCByZXNwb25zZS5kYXRhLm1ldGEuY3VycmVudF9wYWdlKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0pOwogIH0KfTsgLy8gbXV0YXRpb25zCgp2YXIgbXV0YXRpb25zID0gewogIEFERF9QT1NUUzogZnVuY3Rpb24gQUREX1BPU1RTKHN0YXRlLCBwb3N0cykgewogICAgdmFyIF9zdGF0ZSRwb3N0czsKCiAgICAoX3N0YXRlJHBvc3RzID0gc3RhdGUucG9zdHMpLnB1c2guYXBwbHkoX3N0YXRlJHBvc3RzLCBfdG9Db25zdW1hYmxlQXJyYXkocG9zdHMpKTsKICB9LAogIFNFVF9DVVJSRU5UX1BBR0U6IGZ1bmN0aW9uIFNFVF9DVVJSRU5UX1BBR0Uoc3RhdGUsIHBhZ2UpIHsKICAgIHN0YXRlLmN1cnJlbnRQYWdlID0gcGFnZTsKICB9LAogIFNFVF9MQVNUX1BBR0U6IGZ1bmN0aW9uIFNFVF9MQVNUX1BBR0Uoc3RhdGUsIHBhZ2UpIHsKICAgIHN0YXRlLmxhc3RQYWdlID0gcGFnZSA+IDAgPyBwYWdlIDogMDsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/runner/work/front-end/front-end/node_modules/eslint-loader/index.js??ref--14-0!/home/runner/work/front-end/front-end/src/store/modules/feed.ts"],"names":[],"mappings":";AAAA,SAAQ,GAAR,QAAkB,OAAlB,C,CAIA;;AACA,IAAM,KAAK,GAAe;AACtB,EAAA,WAAW,EAAE,CADS;AAEtB,EAAA,QAAQ,EAAE,CAFY;AAGtB,EAAA,KAAK,EAAE;AAHe,CAA1B,C,CAQA;;AACA,IAAM,OAAO,GAAG;AACZ,EAAA,SADY,qBACF,KADE,EACU;AAClB,WAAO,KAAK,CAAC,KAAb;AACH,GAHW;AAIZ,EAAA,eAJY,2BAII,KAJJ,EAIgB;AACxB,WAAO,KAAK,CAAC,WAAb;AACH,GANW;AAOZ,EAAA,YAPY,wBAOC,KAPD,EAOa;AACrB,WAAO,KAAK,CAAC,QAAb;AACH;AATW,CAAhB,C,CAYA;;AACA,IAAM,OAAO,GAAG;AACZ;AACA,EAAA,WAFY,6BAEmB;AAAA,QAAlB,MAAkB,QAAlB,MAAkB;AAAA,QAAV,KAAU,QAAV,KAAU;AAC3B,QAAI,KAAK,CAAC,WAAN,IAAqB,KAAK,CAAC,QAA/B,EAAyC;AAEzC,IAAA,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAa,KAAK,CAAC,WAAN,GAAkB,CAA/B,EAAkC,IAAlC,CAAuC,UAAA,QAAQ,EAAG;AAC9C,cAAQ,QAAQ,CAAC,MAAjB;AACI,aAAK,GAAL;AACI,UAAA,MAAM,CAAC,WAAD,EAAc,QAAQ,CAAC,IAAT,CAAc,IAA5B,CAAN;AACA,UAAA,MAAM,CAAC,eAAD,EAAkB,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,SAArC,CAAN;AACA,UAAA,MAAM,CAAC,kBAAD,EAAqB,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,YAAxC,CAAN;AACA;;AAEJ;AACI;AARR;AAUH,KAXD;AAYH;AAjBW,CAAhB,C,CAoBA;;AACA,IAAM,SAAS,GAAG;AACd,EAAA,SADc,qBACJ,KADI,EACU,KADV,EAC4B;AAAA;;AACtC,oBAAA,KAAK,CAAC,KAAN,EAAY,IAAZ,wCAAoB,KAApB;AACH,GAHa;AAId,EAAA,gBAJc,4BAIG,KAJH,EAIiB,IAJjB,EAI6B;AACvC,IAAA,KAAK,CAAC,WAAN,GAAoB,IAApB;AACH,GANa;AAOd,EAAA,aAPc,yBAOA,KAPA,EAOc,IAPd,EAO0B;AACpC,IAAA,KAAK,CAAC,QAAN,GAAiB,IAAI,GAAG,CAAP,GAAW,IAAX,GAAkB,CAAnC;AACH;AATa,CAAlB;AAYA,eAAe;AACX,EAAA,KAAK,EAAL,KADW;AAEX,EAAA,OAAO,EAAP,OAFW;AAGX,EAAA,OAAO,EAAP,OAHW;AAIX,EAAA,SAAS,EAAT;AAJW,CAAf","sourcesContent":["import {API} from '@/api'\nimport {Post} from '@/models'\nimport {FeedState} from './types'\n\n// initial state\nconst state : FeedState = {\n    currentPage: 0,\n    lastPage: 1,\n    posts: []\n}\n\ntype State = typeof state\n\n// getters\nconst getters = {\n    feedPosts(state: State): Array<Post> {\n        return state.posts;\n    },\n    currentFeedPage(state: State): number {\n        return state.currentPage\n    },\n    lastFeedPage(state: State): number {\n        return state.lastPage\n    }\n}\n\n// actions\nconst actions = {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    getNewPosts({commit, state}:any): void {\n        if (state.currentPage == state.lastPage) return;\n\n        API.Feed.get(state.currentPage+1).then(response => {\n            switch (response.status) {\n                case 200:\n                    commit('ADD_POSTS', response.data.data);\n                    commit('SET_LAST_PAGE', response.data.meta.last_page);\n                    commit('SET_CURRENT_PAGE', response.data.meta.current_page);\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n}\n\n// mutations\nconst mutations = {\n    ADD_POSTS(state: State, posts: Array<Post>): void {\n        state.posts.push(...posts);\n    },\n    SET_CURRENT_PAGE(state: State, page: number): void {\n        state.currentPage = page;\n    },\n    SET_LAST_PAGE(state: State, page: number): void {\n        state.lastPage = page > 0 ? page : 0;\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"],"sourceRoot":""}]}